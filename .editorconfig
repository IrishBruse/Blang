[*]
root = true
indent_style = space
indent_size = 4
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true

# C# specific settings
[*.cs]

dotnet_diagnostic.IDE0051.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.CA1305.severity = none
dotnet_diagnostic.IDE0025.severity = none
dotnet_diagnostic.IDE0028.severity = none # default constructor simplified
dotnet_diagnostic.IDE0078.severity = none # pattern matching
dotnet_diagnostic.IDE0045.severity = none # if can be simplified
dotnet_diagnostic.IDE0072.severity = none # populate switch


# Set the default severity for all style rules to 'warning'.
dotnet_analyzer_diagnostic.severity = warning

# --- General Code Style Preferences ---

csharp_style_namespace_declarations = file_scoped:warning               # Prefer file-scoped namespaces
csharp_using_directive_placement = inside_namespace:warning             # Place 'using' directives inside the namespace
dotnet_sort_system_directives_first = true                              # 'System.*' usings go first
dotnet_style_object_initializer = false:error                           # Disallow object initializers
dotnet_style_readonly_field = false:warning                             # Don't require fields to be readonly
csharp_style_var_for_built_in_types = false:warning                     # Prefer explicit types (e.g., 'int' instead of 'var')
csharp_style_var_when_type_is_apparent = false:warning                  # Prefer explicit types even when obvious
dotnet_style_qualification_for_field = false:warning                    # Do not enforce 'this.' for fields
dotnet_style_qualification_for_property = false:warning                 # Do not enforce 'this.' for properties
dotnet_style_qualification_for_method = false:warning                   # Do not enforce 'this.' for methods

# csharp_style_expression_bodied_properties = false:none                  # Do not enforce body style

dotnet_style_prefer_collection_expression = false                       # Dont prefer collection initalizers

# --- Formatting, Braces, and New Lines (Allman Style) ---

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_prefer_braces = when_multiline:error
csharp_indent_block_contents = true
csharp_space_around_binary_operators = before_and_after
csharp_space_after_keywords_in_control_flow_statements = true

# --- Expression-Bodied Member Preferences ---

csharp_style_expression_bodied_properties = false
csharp_style_expression_bodied_accessors = false
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_operators = false

dotnet_style_prefer_conditional_expression_over_return = false:warning

# --- Naming Conventions ---

dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_style.i_pascal_case.required_prefix = I
dotnet_naming_style.i_pascal_case.capitalization = pascal_case
dotnet_naming_style.t_pascal_case.required_prefix = T
dotnet_naming_style.t_pascal_case.capitalization = pascal_case

dotnet_naming_symbols.types.applicable_kinds = class, struct, enum, delegate
dotnet_naming_symbols.types.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter
dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method, local_function
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.parameters_and_locals.applicable_kinds = parameter, local
dotnet_naming_symbols.parameters_and_locals.applicable_accessibilities = *
dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.severity = warning

dotnet_naming_rule.interfaces_should_be_i_pascal_case.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_i_pascal_case.style = i_pascal_case
dotnet_naming_rule.interfaces_should_be_i_pascal_case.severity = warning

dotnet_naming_rule.type_parameters_should_be_t_pascal_case.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_t_pascal_case.style = t_pascal_case
dotnet_naming_rule.type_parameters_should_be_t_pascal_case.severity = warning

dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning

dotnet_naming_rule.public_fields_should_be_pascal_case.symbols = public_fields
dotnet_naming_rule.public_fields_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.public_fields_should_be_pascal_case.severity = warning

dotnet_naming_rule.private_fields_should_be_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_camel_case.style = camel_case
dotnet_naming_rule.private_fields_should_be_camel_case.severity = warning

# This rule already covers all 'const' fields
dotnet_naming_rule.constants_should_be_upper.symbols = constants
dotnet_naming_rule.constants_should_be_upper.style = pascal_case
dotnet_naming_rule.constants_should_be_upper.severity = warning

dotnet_naming_rule.static_fields_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_pascal_case.severity = warning
